From 08d1abbbd543aa4c82fd8d75de259cb3eea90717 Mon Sep 17 00:00:00 2001
From: Hashir Mahmood <thatburntnerve@gmail.com>
Date: Thu, 27 Jul 2023 14:59:42 +0100
Subject: [PATCH] Project 3 done

---
 src/DataManipulator.ts | 32 ++++++++++++++++++++++++--------
 src/Graph.tsx          | 26 +++++++++++++++-----------
 2 files changed, 39 insertions(+), 19 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..04b6eba 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,19 +1,35 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
   timestamp: Date,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
+  static generateRow(serverRespond: ServerRespond[ ]): Row {
+    const priceABC = (serverRespond [0].top_ask.price + serverRespond [0].top_bid. price) / 2;
+    const priceDEF = (serverRespond [1].top_ask.price + serverRespond [1].top_bid. price) / 2;
+    const ratio = priceABC / priceDEF;
+    const upperBound = 1 + 0.05;
+    const lowerBound = 1 - 0.05;
+    return {
+      price_abc: priceABC,
+      price_def: priceDEF,
+      ratio,
+      timestamp: serverRespond[O].timestamp > serverRespond(1] .timestamp?
+        serverRespond[0] .timestamp : serverRespond[1] .timestamp,
+        upperbound: upperBound,
+        lowerbound: lowerBound,
+        trigger alert: (ratio > upperBound 11 ratio < lowerBound) ? ratio : undefined
+     },
+  }
+
       };
     })
   }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..e711523 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      price_abc: 'float',
+      price_def: 'float',
+      ratio: 'float',
       timestamp: 'date',
+      upper_bound: 'float',
+      lower_bound: 'float',
+      trigger_alert: 'float'
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -36,14 +39,15 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
-      elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
+      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]'); elem.setAttribute('aggregates', JSON.stringify({
+        price_abc: 'avg',
+pr      price_def: 'avg',
+ra      ratio: 'avg',
+ti      timestamp: 'distinct count',
+up      upper_bound: 'avg',
+lo      lower bound: 'avg',
+tr      trigger_alert: 'avg',
       }));
     }
   }
@@ -52,7 +56,7 @@ class Graph extends Component<IProps, {}> {
     if (this.table) {
       this.table.update(
         DataManipulator.generateRow(this.props.data),
-      );
+      ] as unknown as TableData);
     }
   }
 }
-- 
2.39.1.windows.1

